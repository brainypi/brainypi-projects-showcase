"use strict";(self.webpackChunkshunyainterfaces=self.webpackChunkshunyainterfaces||[]).push([[41],{3905:function(t,e,n){n.d(e,{Zo:function(){return c},kt:function(){return g}});var r=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var p=r.createContext({}),s=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},c=function(t){var e=s(t.components);return r.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,o=t.originalType,p=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),m=s(n),g=i,f=m["".concat(p,".").concat(g)]||m[g]||u[g]||o;return n?r.createElement(f,a(a({ref:e},c),{},{components:n})):r.createElement(f,a({ref:e},c))}));function g(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l.mdxType="string"==typeof t?t:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2157:function(t,e,n){n.r(e),n.d(e,{assets:function(){return u},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return m}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=n(4996),l=["components"],p={id:"emulation-station",title:"Retro Gaming on BrainyPi",description:"Retro Gaming on BrainyPi",image:"img/emulation-station.png",keywords:["retro gaming"]},s=void 0,c={unversionedId:"projects/emulation-station",id:"projects/emulation-station",title:"Retro Gaming on BrainyPi",description:"Retro Gaming on BrainyPi",source:"@site/docs/projects/emulation-station.md",sourceDirName:"projects",slug:"/projects/emulation-station",permalink:"/brainypi-projects-showcase/docs/projects/emulation-station",draft:!1,tags:[],version:"current",frontMatter:{id:"emulation-station",title:"Retro Gaming on BrainyPi",description:"Retro Gaming on BrainyPi",image:"img/emulation-station.png",keywords:["retro gaming"]},sidebar:"projectsSidebar",previous:{title:"Personal Email server on Brainypi",permalink:"/brainypi-projects-showcase/docs/projects/email-server"},next:{title:"Personal Git server on BrainyPi",permalink:"/brainypi-projects-showcase/docs/projects/gogs"}},u={},m=[],g={toc:m};function f(t){var e=t.components,n=(0,i.Z)(t,l);return(0,o.kt)("wrapper",(0,r.Z)({},g,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Description:")," EmulationStation is a frontend for emulators, which gives a graphical interface for accessing all of your games. It is a core part of RetroPie and is what lets you sort and configure games. Using EmulationStation on Brainy Pi we can start building own alternative to RetroPie."),(0,o.kt)("img",{alt:"Oops!, No Image to display.",src:(0,a.Z)("img/emulation-station.png"),width:"200"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Steps to Install:")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Copy and paste the following lines into a terminal:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"sudo apt-get install -y git\n\ngit clone --depth=1 https://github.com/RetroPie/RetroPie-Setup.git\n\ncd RetroPie-Setup\n\nsudo ./retropie_setup.sh\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"As we don\u2019t want to install the entirety of RetroPie for this guide we must switch to the ",(0,o.kt)("em",{parentName:"p"},"Manage Packages")," screen."))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"You can do this by pressing the ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"B"))," key, then by pressing ",(0,o.kt)("inlineCode",{parentName:"p"},"ENTER"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"As EmulationStation is a core package for RetroPie, we can switch straight into the first option by pressing the ",(0,o.kt)("inlineCode",{parentName:"p"},"ENTER")," key."))),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Within this next menu, we need to select the ",(0,o.kt)("inlineCode",{parentName:"li"},"emulationstation")," option.  ")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You can do this by pressing ",(0,o.kt)("inlineCode",{parentName:"li"},"2"),", then the ",(0,o.kt)("inlineCode",{parentName:"li"},"ENTER")," key.")),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"We will be using the pre-compiled binary option for this tutorial as it is far faster to install them. Select this option by pressing ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"B")),", then the ",(0,o.kt)("inlineCode",{parentName:"p"},"ENTER")," key.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Press ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"Y"))," on your keyboard then the ENTER key to proceed with the installation.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Now that you have installed EmulationStation, you can quit by pressing the ",(0,o.kt)("inlineCode",{parentName:"p"},"ESC")," key till you return to the command line.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Installation will be done."))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Useful for:")," retro gaming"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Link to original project:"),"  ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/RetroPie/EmulationStation.git"},"https://github.com/RetroPie/EmulationStation.git")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Link to Youtube Video:")," "))}f.isMDXComponent=!0}}]);