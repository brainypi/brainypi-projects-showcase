"use strict";(self.webpackChunkshunyainterfaces=self.webpackChunkshunyainterfaces||[]).push([[350],{3905:function(e,r,n){n.d(r,{Zo:function(){return l},kt:function(){return m}});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function p(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=t.createContext({}),s=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},l=function(e){var r=s(e.components);return t.createElement(c.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},u=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||i;return n?t.createElement(f,o(o({ref:r},l),{},{components:n})):t.createElement(f,o({ref:r},l))}));function m(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var p={};for(var c in r)hasOwnProperty.call(r,c)&&(p[c]=r[c]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var s=2;s<i;s++)o[s]=n[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6905:function(e,r,n){n.r(r),n.d(r,{assets:function(){return d},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var t=n(7462),a=n(3366),i=(n(7294),n(3905)),o=n(4996),p=["components"],c={id:"irc-server",title:"Personal IRC Server",description:"Personal IRC Server",image:"img/irc-server.png",keywords:["IRC chat server","POSIX based"]},s=void 0,l={unversionedId:"projects/irc-server",id:"projects/irc-server",title:"Personal IRC Server",description:"Personal IRC Server",source:"@site/docs/projects/irc-server.md",sourceDirName:"projects",slug:"/projects/irc-server",permalink:"/brainypi-projects-showcase/docs/projects/irc-server",draft:!1,tags:[],version:"current",frontMatter:{id:"irc-server",title:"Personal IRC Server",description:"Personal IRC Server",image:"img/irc-server.png",keywords:["IRC chat server","POSIX based"]},sidebar:"projectsSidebar",previous:{title:"Personal Git server on BrainyPi",permalink:"/brainypi-projects-showcase/docs/projects/gogs"},next:{title:"Content Management System on BrainyPi",permalink:"/brainypi-projects-showcase/docs/projects/joomla"}},d={},u=[],m={toc:u};function f(e){var r=e.components,n=(0,a.Z)(e,p);return(0,i.kt)("wrapper",(0,t.Z)({},m,n,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Description:")," A high-performance, light weighted internet relay chat daemon. Designed to be fast and reliable. Powering IRC networks since 1997. "),(0,i.kt)("img",{alt:"Oops!, No Image to display.",src:(0,o.Z)("img/irc-server.png"),width:"200"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Steps to Install:")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Just copy and paste the following lines into a terminal:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"sudo apt update\nsudo apt upgrade\n\nsudo apt install ircd-hybrid\n\n/usr/bin/mkpasswd brainy\n\nsudo nano /etc/ircd-hybrid/ircd.conf\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Find"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'name = "hybrid8.debian.local";\n\ndescription = "ircd-hybrid 8.1-debian";\n\nnetwork_name = "debian";\nnetwork_desc = "This is My Network";\n\nmax_clients = 512;\n\nWithin the operator { block\n\nFind and remove\n\n#\n\nname = "sheep";\n\nuser = "*@192.0.2.240/28";\n\npassword = "xxxxxxxxxxxxx";\n'))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Replace"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'name = "pimylifeup.irc";\n\ndescription = "Raspberry Pi IRC Server";\n\nnetwork_name = "pimylifeup";\nnetwork_desc = "This is my Raspberry Pi IRC Network";\n\nmax_clients = 128;\n\nname = "op";\n\nuser = "*@*";\n\npassword = "brainy";\n'))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Save and quit out of the file by pressing Ctrl +X , then press Y and then Enter.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Run the following command."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"sudo nano /etc/ircd-hybrid/ircd.motd\n\nsudo /etc/init.d/ircd-hybrid restart\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Installation will be completed."))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Useful for:")," IRC chat server, POSIX based."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Link to original project:")," ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ircd-hybrid/ircd-hybrid"},"https://github.com/ircd-hybrid/ircd-hybrid")))}f.isMDXComponent=!0}}]);