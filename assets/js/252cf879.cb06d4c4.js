"use strict";(self.webpackChunkshunyainterfaces=self.webpackChunkshunyainterfaces||[]).push([[244],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),g=l(n),m=o,d=g["".concat(p,".").concat(m)]||g[m]||u[m]||s;return n?r.createElement(d,i(i({ref:t},c),{},{components:n})):r.createElement(d,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,i=new Array(s);i[0]=g;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var l=2;l<s;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},5849:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return g}});var r=n(7462),o=n(3366),s=(n(7294),n(3905)),i=n(4996),a=["components"],p={id:"gogs",title:"Personal Git server on BrainyPi",description:"Personal Git server on BrainyPi",image:"img/gogs.png",keywords:["Open Source","build a simple","stable and extensible self-hosted Git service that can be set up in the most painless way"]},l=void 0,c={unversionedId:"projects/gogs",id:"projects/gogs",title:"Personal Git server on BrainyPi",description:"Personal Git server on BrainyPi",source:"@site/docs/projects/gogs.md",sourceDirName:"projects",slug:"/projects/gogs",permalink:"/brainypi-projects-showcase/docs/projects/gogs",draft:!1,tags:[],version:"current",frontMatter:{id:"gogs",title:"Personal Git server on BrainyPi",description:"Personal Git server on BrainyPi",image:"img/gogs.png",keywords:["Open Source","build a simple","stable and extensible self-hosted Git service that can be set up in the most painless way"]},sidebar:"projectsSidebar",previous:{title:"Retro Gaming on BrainyPi",permalink:"/brainypi-projects-showcase/docs/projects/emulation-station"},next:{title:"Personal IRC Server",permalink:"/brainypi-projects-showcase/docs/projects/irc-server"}},u={},g=[],m={toc:g};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,s.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Description:")," Gogs aims to build a simple, stable and extensible self-hosted Git service that can be set up easily. This can be done with independent binary distribution across all platforms that Go supports, Linux, macOS, Windows and ARM-based systems."),(0,s.kt)("img",{alt:"Oops!, No Image to display.",src:(0,i.Z)("img/gogs.png"),width:"200"}),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Steps to Install:")),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Copy and paste the following lines into a terminal:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre"},"sudo apt update\nsudo apt upgrade\n\nsudo apt install mariadb-server git unzip\n\nsudo mysql_secure_installation\n"))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Now just press ",(0,s.kt)("inlineCode",{parentName:"p"},"enter")," and answer some questions according to how you want the access to be set.")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Run the below commands."),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre"},"sudo mysql -u root -p\n\nCREATE DATABASE gogs;\n\nGRANT ALL PRIVILEGES ON gogs.* TO 'goguser'@'localhost' IDENTIFIED BY 'pimylifeup';\n\nFLUSH PRIVILEGES;\n\nexit\n\nsudo adduser --disabled-login git\n\ncd /home/git\nsudo wget https://dl.gogs.io/0.12.3/gogs_0.12.3_linux_armv7.zip -O gogs.zip\nsudo unzip gogs.zip\nsudo rm gogs.zip\n\nsudo chown -R git:git /home/git\n\nsudo systemctl enable /home/git/gogs/scripts/systemd/gogs.service\n\nsudo systemctl start gogs.service\n\nsudo systemctl status gogs.service\n"))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Gogs will be installed."))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Useful for:")," Open Source, build a simple, stable and extensible self-hosted Git service that can be set up in the most painless way."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Link to original project:")," ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/gogs/gogs"},"https://github.com/gogs/gogs")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Link to Youtube Video:")," "))}d.isMDXComponent=!0}}]);