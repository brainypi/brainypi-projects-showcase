"use strict";(self.webpackChunkshunyainterfaces=self.webpackChunkshunyainterfaces||[]).push([[72],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(r),d=a,k=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return r?n.createElement(k,i(i({ref:t},c),{},{components:r})):n.createElement(k,i({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},5380:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return m}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=(r(4996),["components"]),p={id:49672,title:"Implement Plex on Brainy Pi",description:"Implement Plex on Brainy Pi",image:"img/default-image.png",keywords:["free tv","live tv","movies","series","media"]},l=void 0,s={unversionedId:"projects/49672",id:"projects/49672",title:"Implement Plex on Brainy Pi",description:"Implement Plex on Brainy Pi",source:"@site/docs/projects/49672.md",sourceDirName:"projects",slug:"/projects/49672",permalink:"/brainypi-projects-showcase/docs/projects/49672",draft:!1,tags:[],version:"current",frontMatter:{id:"49672",title:"Implement Plex on Brainy Pi",description:"Implement Plex on Brainy Pi",image:"img/default-image.png",keywords:["free tv","live tv","movies","series","media"]},sidebar:"projectsSidebar",previous:{title:"Implement POS on Brainy Pi",permalink:"/brainypi-projects-showcase/docs/projects/49668"},next:{title:"To Implement Joomla on Brainy Pi",permalink:"/brainypi-projects-showcase/docs/projects/49679"}},c={},m=[],u={toc:m};function d(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Description:")," Plex is a client-server setup where the client directly streams data from the Plex media server. As a result we can have all our movies, music, and photos located on this one device, the server. We will be using the Brainy Pi to achieve this."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Image:")," Should be in insta format."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Steps to install")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Just copy and paste the following lines into a terminal to upgrade all the packages."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"}," sudo apt-get update\n sudo apt-get upgrade\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"We need to install apt-transport-https\u201d package. This package allows the ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"\u201capt\u201d")),"\npackage manager to retrieve packages over the \u201chttps\u201d protocol that the Plex repository\nuses."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"sudo apt-get install apt-transport-https\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Now add the Plex repositories to the \u201capt\u201d keyrings directory."))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Run the following command to download and save the key to our keyrings directory."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"curl https://downloads.plex.tv/plex-keys/PlexSign.key | gpg --dearmor | sudo tee \n/usr/share/keyrings/plex-archive-keyring.gpg >/dev/null\n")))),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"With the Plex GPG key now added, we can add the official plex repository to\nthe sources list by running the following command."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"echo deb [signed-by=/usr/share/keyrings/plex-archive-keyring.gpg] \nhttps://downloads.plex.tv/repo/deb public main | sudo tee \n/etc/apt/sources.list.d/plexmediaserver.list\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Since we have added a new repository to our sources, we will need to run the \u201cupdate\u201d\ncommand again to refresh the package list."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"sudo apt-get update\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"To install the ",(0,o.kt)("em",{parentName:"p"},"plexmediaserver")," package, run the command below."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"sudo apt install plexmediaserver\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Installation is completed. ")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"The installation process for Plex sets up a few different things for us."))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"First, it creates a user and group for Plex to run under. This user and group is called\n\u201cplex\u201c.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"It will also set up two directories, one to store files temporarily that Plex is transcoding. We can find this folder at ",(0,o.kt)("em",{parentName:"p"},'"/var/lib/plexmediaserver/tmp_transcoding\u201c'),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The second directory is where Plex will store all the metadata it retrieves for your\nmedia. This folder can be found at ",(0,o.kt)("em",{parentName:"p"},"\u201c/var/lib/plexmediaserver/Library/Application\nSupport\u201c")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Useful for:")," free tv, live tv, movies, series, media."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Link to original project:")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/plexinc"},"https://github.com/plexinc")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Link to Youtube Video:")))}d.isMDXComponent=!0}}]);