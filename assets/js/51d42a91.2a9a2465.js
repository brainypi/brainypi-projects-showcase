"use strict";(self.webpackChunkshunyainterfaces=self.webpackChunkshunyainterfaces||[]).push([[343],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,y=m["".concat(p,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(y,o(o({ref:t},c),{},{components:n})):r.createElement(y,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5266:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return y},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return m}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=n(4996),l=["components"],p={id:"screenly",title:"Digital Signage on Brainy Pi",description:"Digital Signage on Brainy Pi",image:"img/screenly.png",keywords:["to upload contents","create and schedule playlists on single interface"]},s=void 0,c={unversionedId:"projects/screenly",id:"projects/screenly",title:"Digital Signage on Brainy Pi",description:"Digital Signage on Brainy Pi",source:"@site/docs/projects/screenly.md",sourceDirName:"projects",slug:"/projects/screenly",permalink:"/brainypi-projects-showcase/docs/projects/screenly",draft:!1,tags:[],version:"current",frontMatter:{id:"screenly",title:"Digital Signage on Brainy Pi",description:"Digital Signage on Brainy Pi",image:"img/screenly.png",keywords:["to upload contents","create and schedule playlists on single interface"]},sidebar:"projectsSidebar",previous:{title:"\x3c!-- Describe the project in 1 sentence --\x3e",permalink:"/brainypi-projects-showcase/docs/projects/radio-station"},next:{title:"Sync files between devices",permalink:"/brainypi-projects-showcase/docs/projects/syncthing"}},u={},m=[],d={toc:m};function y(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Description:")," Screenly OSE (Open Source Edition) is a digital signage software package that allows one to easily manage and display webpages, videos, images etc and make full use of Brainy Pi hardware."),(0,i.kt)("img",{alt:"Oops!, No Image to display.",src:(0,o.Z)("img/screenly.png"),width:"200"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Steps to Install:")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Update your Brainy Pi OS using below commands before installing ",(0,i.kt)("em",{parentName:"p"},"Screenly")," Software.",(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"sudo apt update"),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"sudo apt full-upgrade"),"  ")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Run the below script which will download the install script from the\n",(0,i.kt)("em",{parentName:"p"},"Screenly")," website\nand pass it directly to ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"em"},"bash")),".",(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"bash <(curl -sL https://www.screenly.io/install-ose.sh)"),"  ")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"During installation process, we will be asked a series of questions."))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The first of these is whether we want to continue. You will be warned that\nthe standard desktop environment, if available, will no longer work after installation.  ")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Type ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Y"))," to continue with the Screenly installation process on Brainy Pi.  ")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Next, you will be asked if you want to use the experimental branch of Screenly.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Type ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"N"))," to decline as experimental feature is unstable.  ")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'Now it will  ask the version which we want to install  so select the "Production\nBranch".')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"After this it will ask  ",(0,i.kt)("inlineCode",{parentName:"p"},'"do you want screenly to manage our network"'),", press ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Y")),". ")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Finally, you will be asked if you want to perform a full system upgrade, press ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"N")),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Screenly will now be installed on your Raspberry Pi.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Now it will ask for changing password we don't need to do that for now so just press\nenter.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Finally, you will be asked to restart your Raspberry Pi to complete the installation of\nScreenly for which  you need to type in ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Y"))," then press ",(0,i.kt)("inlineCode",{parentName:"p"},"ENTER"),".  "))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Useful for:")," to upload contents, create and schedule playlists on single interface,\ndisplay Full HD images, videos and live web pages.  "),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Link to Original Project:")," ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Screenly/screenly-ose.git"},"https://github.com/Screenly/screenly-ose.git")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Link to Youtube Video:")," "))}y.isMDXComponent=!0}}]);