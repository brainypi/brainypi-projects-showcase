"use strict";(self.webpackChunkshunyainterfaces=self.webpackChunkshunyainterfaces||[]).push([[57],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),f=p(n),m=a,y=f["".concat(l,".").concat(m)]||f[m]||u[m]||o;return n?r.createElement(y,i(i({ref:t},s),{},{components:n})):r.createElement(y,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9778:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=(n(4996),["components"]),c={id:48908,title:"Netatalk",description:"Netatalk",image:"img/default-image.png",keywords:["Open Source AFP fileserver"]},l=void 0,p={unversionedId:"projects/48908",id:"projects/48908",title:"Netatalk",description:"Netatalk",source:"@site/docs/projects/48908.md",sourceDirName:"projects",slug:"/projects/48908",permalink:"/brainypi-projects-showcase/docs/projects/48908",draft:!1,tags:[],version:"current",frontMatter:{id:"48908",title:"Netatalk",description:"Netatalk",image:"img/default-image.png",keywords:["Open Source AFP fileserver"]},sidebar:"projectsSidebar",previous:{title:"Syncthing",permalink:"/brainypi-projects-showcase/docs/projects/48907"},next:{title:"Privoxy",permalink:"/brainypi-projects-showcase/docs/projects/48909"}},s={},u=[],f={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Description:")," Netatalk is a freely-available Open Source AFP fileserver. A UNIX, Linux or BSD system running Netatalk is capable of serving many Macintosh clients simultaneously as an AppleShare file server (AFP)."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Steps to install:-")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Go to the directory where the script is."),(0,o.kt)("li",{parentName:"ol"},"sudo bash ./brainyinstall netatalk.sh")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"#!/bin/sh\nsudo apt install netatalk\necho $'\n[Homes]\n\\n\\tbasedir regex = /home\n\\n\\tpath = <foldername>\n\\n[My AFP Share Name]\n\\n\\tpath = /path/to/directory\n\\n\\n[My AFP Share Name]\n\\n\\tpath = /path/to/directory\n\\n\\ttime machine = true\n\\n\\n[My AFP Share Name]\n\\n\\tpath = /path/to/directory\n\\n\\tread only = true\n\\n\\n[Global]\n\\n\\tguest account = pi\n' >> /etc/netatalk/afp.conf\n\nsudo systemctl restart netatalk\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Useful for:")," Open Source AFP fileserver"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Link to original project:")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Netatalk/Netatalk"},"https://github.com/Netatalk/Netatalk")))}m.isMDXComponent=!0}}]);