"use strict";(self.webpackChunkshunyainterfaces=self.webpackChunkshunyainterfaces||[]).push([[532],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),g=u(n),d=o,f=g["".concat(l,".").concat(d)]||g[d]||p[d]||s;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=g;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var u=2;u<s;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},7506:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var r=n(7462),o=n(3366),s=(n(7294),n(3905)),a=["components"],i={},l=void 0,u={unversionedId:"raw/48906",id:"raw/48906",title:"48906",description:"Title: Gogs",source:"@site/docs/raw/48906.md",sourceDirName:"raw",slug:"/raw/48906",permalink:"/brainypi-projects-showcase/docs/raw/48906",draft:!1,tags:[],version:"current",frontMatter:{}},c={},p=[{value:"Title: Gogs",id:"title-gogs",level:2}],g={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,s.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"title-gogs"},"Title: Gogs"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Description:")," Gogs aims to build a simple, stable and extensible self-hosted Git service that can be set up easily. This can be done with independent binary distribution across all platforms that Go supports, Linux, macOS, Windows and ARM-based systems."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Steps to install:-")),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Go to the directory where the script is."),(0,s.kt)("li",{parentName:"ol"},"sudo bash ./brainyinstall gogs.sh")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"#!/bin/sh\nsudo apt update\nsudo apt upgrade\nsudo apt install mariadb-server git unzip\nsudo mysql_secure_installation\nsudo mysql -u root -p\nCREATE DATABASE gogs;\nGRANT ALL PRIVILEGES ON gogs.* TO 'goguser'@'localhost' IDENTIFIED BY 'pimylifeup';\nFLUSH PRIVILEGES;\nexit\nsudo adduser --disabled-login git\ncd /home/git\nsudo wget https://dl.gogs.io/0.12.3/gogs_0.12.3_linux_armv7.zip -O gogs.zip\nsudo unzip gogs.zip\nsudo rm gogs.zip\nsudo chown -R git:git /home/git\nsudo systemctl enable /home/git/gogs/scripts/systemd/gogs.service\nsudo systemctl start gogs.service\nsudo systemctl status gogs.service\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Useful for:")," Open Source, build a simple, stable and extensible self-hosted Git service that can be set up in the most painless way"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Link to original project:")," ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/gogs/gogs"},"https://github.com/gogs/gogs")))}d.isMDXComponent=!0}}]);