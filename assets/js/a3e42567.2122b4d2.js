"use strict";(self.webpackChunkshunyainterfaces=self.webpackChunkshunyainterfaces||[]).push([[558],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=l(r),f=a,d=m["".concat(s,".").concat(f)]||m[f]||u[f]||o;return r?n.createElement(d,i(i({ref:t},c),{},{components:r})):n.createElement(d,i({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1769:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return u}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=(r(4996),["components"]),p={id:49681,title:"Implement Graphana on Brainy Pi",description:"Implement Graphana on Brainy Pi",image:"img/default-image.png",keywords:["For Grafana"]},s=void 0,l={unversionedId:"projects/49681",id:"projects/49681",title:"Implement Graphana on Brainy Pi",description:"Implement Graphana on Brainy Pi",source:"@site/docs/projects/49681.md",sourceDirName:"projects",slug:"/projects/49681",permalink:"/brainypi-projects-showcase/docs/projects/49681",draft:!1,tags:[],version:"current",frontMatter:{id:"49681",title:"Implement Graphana on Brainy Pi",description:"Implement Graphana on Brainy Pi",image:"img/default-image.png",keywords:["For Grafana"]},sidebar:"projectsSidebar",previous:{title:"Captive Portal on Brainy Pi",permalink:"/brainypi-projects-showcase/docs/projects/49680"},next:{title:"Implement Prometheus on Brainy Pi.",permalink:"/brainypi-projects-showcase/docs/projects/49682"}},c={},u=[],m={toc:u};function f(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Description:")," Grafana allows you to query, visualize, alert on and understand your metrics no matter where they are stored. Create, explore, and share beautiful dashboards with your team and foster a data driven culture."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Image:")," Should be in insta format."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Steps to install")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Just copy and paste the following lines into a terminal:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"sudo apt update\nsudo apt upgrade\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"For installation run the below code."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},'curl https://packages.grafana.com/gpg.key | gpg --dearmor | sudo tee \n/usr/share/keyrings/grafana-archive-keyrings.gpg >/dev/null\n\necho "deb [signed-by=/usr/share/keyrings/grafana-archive-keyrings.gpg] \nhttps://packages.grafana.com/oss/deb stable main" | sudo tee \n/etc/apt/sources.list.d/grafana.list\n\nsudo apt update\n\nsudo apt install grafana\n'))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"To enable Grafana to start at boot, all we need to do is run the following command."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"sudo systemctl enable grafana-server\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Finally for starting up the Grafana server software by running the command below in the Pi\u2019s terminal."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"sudo systemctl start grafana-server\n")),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Useful for:")," For Grafana: open source, query, visualize, alert, understand metrics, used to create, share and explore dashboards with team."))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Link to original project:")," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/grafana/grafana"},"https://github.com/grafana/grafana")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Link to Youtube Video:")))}f.isMDXComponent=!0}}]);